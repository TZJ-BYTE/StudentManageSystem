Index: src/main/webapp/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n  <display-name>Archetype Created Web Application</display-name>\n\n  <welcome-file-list>\n    <welcome-file>login.jsp</welcome-file>\n  </welcome-file-list>\n  <!--启动Spring-->\n  <context-param>\n    <param-name>contextConfigLocation</param-name>\n    <param-value>classpath:spring-mybatis.xml</param-value>\n  </context-param>\n  <listener>\n    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n  </listener>\n  <!--Spring MVC-->\n  <servlet>\n    <servlet-name>dispatcherServlet</servlet-name>\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    <init-param>\n      <param-name>contextConfigLocation</param-name>\n      <param-value>classpath:spring-mvc.xml</param-value>\n    </init-param>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>dispatcherServlet</servlet-name>\n    <url-pattern>/</url-pattern>\n  </servlet-mapping>\n  <!--字符编码过滤-->\n  <filter>\n    <filter-name>characterEncodingFilter</filter-name>\n    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n    <init-param>\n      <param-name>encoding</param-name>\n      <param-value>UTF-8</param-value>\n    </init-param>\n  </filter>\n  <filter-mapping>\n    <filter-name>characterEncodingFilter</filter-name>\n    <url-pattern>/*</url-pattern>\n  </filter-mapping>\n</web-app>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/web.xml b/src/main/webapp/WEB-INF/web.xml
--- a/src/main/webapp/WEB-INF/web.xml	(revision 53db32c8e26b5c16182ca446c40fd53fa68d2bdb)
+++ b/src/main/webapp/WEB-INF/web.xml	(date 1735545993561)
@@ -4,7 +4,6 @@
          xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
          version="4.0">
   <display-name>Archetype Created Web Application</display-name>
-
   <welcome-file-list>
     <welcome-file>login.jsp</welcome-file>
   </welcome-file-list>
Index: src/main/webapp/Login.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GB2312
===================================================================
diff --git a/src/main/webapp/Login.jsp b/src/main/webapp/Login.jsp
new file mode 100644
--- /dev/null	(date 1735545993560)
+++ b/src/main/webapp/Login.jsp	(date 1735545993560)
@@ -0,0 +1,72 @@
+<!DOCTYPE html>
+<%@ page contentType="text/html; charset=gb2312"%>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>User Registration</title>
+</head>
+<body>
+<h2>用户登录</h2>
+<form id="registrationForm">
+    <label for="username">账号:</label>
+    <input type="text" id="username" name="username" required>
+    <br>
+    <label for="password">密码:</label>
+    <input type="password" id="password" name="password" required>
+    <br>
+    <button type="button" onclick="login()">登录</button>
+    <button type="button" onclick="registerUser()">注册</button>
+</form>
+<script>
+    //跳转到注册页面
+    function registerUser(){
+        location.href="${pageContext.request.contextPath}/user/registerpage"
+    }
+    function login() {
+        const username = document.getElementById('username').value;
+        const password = document.getElementById('password').value;
+        // 确保用户输入了用户名和密码
+        if (username === '' || password === '') {
+            alert('请输入账号和密码');
+            return;
+        }
+        // 创建一个要发送到服务器的JSON对象
+        const userData = {
+            username: username,
+            password: password // 在实际应用中，密码应当在客户端加密
+        };
+        console.log("请求体",userData)
+        // 使用fetch发送POST请求
+        fetch('/StudentManageSystem_master_war/user/Login', {
+            method: 'POST',
+            headers: {
+                'Content-Type': 'application/json'
+            },
+            body: JSON.stringify(userData)
+        })
+            .then(response => {
+                if (!response.ok) {
+                    throw new Error('请求失败');
+                }
+                return response.json();
+            })
+            .then(data => {
+                console.log("返回体",data)
+                // 处理注册成功的响应
+                alert(data.Message);
+                // 可以在这里添加跳转逻辑或其他操作
+                if(data.success){
+                    location.href="${pageContext.request.contextPath}/user/success"
+                }
+                else alert("登录出错请重试")
+            })
+            .catch(error => {
+                // 处理错误情况
+                console.error('出错:', error);
+                alert('出错了请重试');
+            });
+    }
+</script>
+</body>
+</html>
